"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OSCServer = void 0;
var EventEmitter = require("events");
var dgram = __importStar(require("dgram"));
var osc_min_1 = require("osc-min");
/**
 * OSC Server, handles receiving OSC messages

   ```
   const osc = new OSCServer("192.168.0.44", 8000);
   ```
 */
var OSCServer = /** @class */ (function (_super) {
    __extends(OSCServer, _super);
    function OSCServer(bindAddress, port) {
        var _this = _super.call(this) || this;
        _this.socket = dgram.createSocket({ type: 'udp4', reuseAddr: true });
        _this.socket.bind({
            port: port,
            address: bindAddress,
            exclusive: true,
        });
        _this.socket.on('listening', function () {
            _this.emit('listening');
        });
        _this.socket.on('close', function () {
            _this.emit('close');
        });
        _this.socket.on('error', function (e) {
            _this.emit('error', e);
        });
        _this.socket.on('message', function (msg) {
            var decoded = osc_min_1.fromBuffer(msg);
            if (decoded.oscType === 'message') {
                decoded.args.forEach(function (arg) {
                    _this.emit('message', {
                        address: decoded.address,
                        type: arg.type,
                        value: arg.value,
                    });
                });
            }
        });
        return _this;
    }
    /**
     * close the server
     */
    OSCServer.prototype.close = function () {
        this.socket.close();
    };
    return OSCServer;
}(EventEmitter));
exports.OSCServer = OSCServer;
