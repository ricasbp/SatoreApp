/// <reference types="node" />
export interface OSCArgument<T extends OSCType> {
    type: T;
    value: OSCArgumentType<T>;
}
export declare enum OSCType {
    String = "string",
    Float = "float",
    Integer = "integer",
    Blob = "blob",
    True = "true",
    False = "false",
    Null = "null",
    Bang = "bang",
    Timetag = "timetag",
    Array = "array"
}
export declare type OSCArgumentType<T extends OSCType> = T extends OSCType.String ? string : T extends OSCType.Float | OSCType.Integer | OSCType.Timetag ? number : T extends OSCType.True ? true : T extends OSCType.False ? false : T extends OSCType.Blob ? Buffer : T extends OSCType.Array ? OSCArgument<OSCType>[] : null;
